P_train = res(1: 65, 1: 4)';
T_train = res(1: 65, 5)';
M = size(P_train, 2);
P_test = res(66: end, 1: 4)';
T_test = res(66: end, 5)';
N = size(P_test, 2);
[p_train, ps_input] = mapminmax(P_train, 0, 1);
p_test = mapminmax('apply', P_test, ps_input);
[t_train, ps_output] = mapminmax(T_train, 0, 1);
t_test = mapminmax('apply', T_test, ps_output);
net = newff(p_train, t_train, 5);
net.trainParam.epochs = 1000;
net.trainParam.goal = 1e-4;
net.trainParam.lr = 0.01;
net= train(net, p_train, t_train);
t_sim1 = sim(net, p_train);
t_sim2 = sim(net, p_test );
T_sim1 = mapminmax('reverse', t_sim1, ps_output);
T_sim2 = mapminmax('reverse', t_sim2, ps_output);
T_sim12 = [T_sim1, T_sim2];
YC = transpose(T_sim12);
